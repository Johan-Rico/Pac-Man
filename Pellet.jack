class Pellet {
	field int x, y;
	field boolean isCokie;
	field boolean isCovered;
	field boolean eaten;
	field int radius;

  	constructor Pellet new(int xi, int yi, boolean cokie) {
		let isCovered = false;
		let eaten = false;
		let isCokie = cokie;
		let x = xi*9+24;
		let y = yi*9+45;
		if (isCokie) {
			let radius = 4;
		} else {	
			let radius = 1;
		}
		return this;
  	}

	method void draw() {
		if (eaten) {
			return;
		}
		if (isCokie) {
			do Screen.drawCircle(x, y, radius);
		} else {	
			do Screen.drawRectangle(x, y, x+1, y+1);
		}
		return;
	}

	method void delete() {
		if (isCokie) {
			do Screen.drawCircle(x, y, radius);
		} else {	
			do Screen.drawRectangle(x, y, x+1, y+1);
		}
		return;
	}

	method int getPoints() {
		if (isCokie) {
			return 50;
		}
		return 10;
	}

  	method boolean checkCollision(int xi, int yi, int pRadius) {
		var int leftX, topY, rightX, bottomY;
		let leftX = x - radius-1;
		let topY = y - radius-1;
		let rightX = x + radius+1;
		let bottomY = y + radius+1;
		
		if ((((xi-pRadius) < (rightX)) & ((xi+pRadius) > (leftX))) &
		(((yi-pRadius) < (bottomY)) & ((yi+pRadius) > (topY)) & ~eaten)) {
			let eaten = true;
			do delete();
			return true;
		}
		return false;
  	}

  	method void dispose() {
    	do Memory.deAlloc(this);
    	return;
  	}
}