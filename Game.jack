class Game {

	field PacMan pacman;
	field int score;
	field Map map;
	field boolean color;
	field int score;
	field int lives;
	static int highScore;
	
	constructor Game new(boolean c) {
		let color = c;
		let lives = 3;
		let score = 32000;
		do Output.setColor(~color);
		do clearScreen();
		do createSprites();
		return this;
	}

	method void init() {
		do map.init();
		do startLevel();
		do Sys.wait(1000);
		return;
	}

	method void next() {
		do pacman.next();
		return;
	}
	
	method void handleKey(int key) {
		if (key = 144) {
			do changeColor(true);
		}
		if (key = 145){
			do handlePacmanDeath();
			//do changeColor(false);
		}
		do pacman.handleKey(key);
		return;
	}

	method void clearScreen() {
		var int x, y;
        do Screen.setColor(color);
		do Screen.drawRectangle(0, 0, 511, 255);
		do Screen.setColor(~color);
		return;
	}

	method void newGame() {
		do disposeSprites();
		do clearScreen();
		do createSprites();
		do init();
		return;
  	}

	method void changeColor(boolean c) {
		let color = c;
		do Output.setColor(~color);
		do clearScreen();
		do printLabels();
		do pacman.changeColor(~color);
		do pacman.draw();
		do map.changeColor(~color);
		do map.draw();
		return;
	}

	method void printLabels() {
		do Output.moveCursor(1,24);
		do Output.printString("HIGH SCORE");
		do Output.moveCursor(1,36);
		do Output.printString("00");
		do Output.moveCursor(1,4);
		do Output.printString("00");
		return;
	}


	method void printScore() {
		do Output.moveCursor(1,4);
		do Output.printInt(score);
		if (score > highScore) {
			let highScore = score;
			do Output.moveCursor(1,36);
			do Output.printInt(highScore);
		}
		return;
	}

	method void printLives() {

		//TODO: print lives
		return;
	}

	method void printLive(int x, int y) {

		//TODO: print live (pacman)
		return;
	}

	method void startLevel() {
		let pacman = PacMan.new(~color, map);
		do pacman.init();
		do Sys.wait(2000);
		return;
	}

	method void handlePacmanDeath() {
		let lives = lives - 1;
		do Sys.wait(1000);
		do pacman.deathAnimation();
		do Sys.wait(2000);
		do pacman.dispose();
		if (lives > 0) {
			do startLevel();
		} else {
			do Output.printString("GAME OVER");
		}
		return;
	}


	method void createSprites() {
		var int x;
		var int y;
		let y = 29;
		do printLabels();
		let map = Map.new(~color);
		while (y < 255) {
			let x = 8;
			while (x < 511) {
				do Screen.drawRectangle(x, y, x+1, y+1);
				let x = x + 9;
			}
			let y = y + 9;
		}
		return;
	}
		
  	method void disposeSprites() {
		do pacman.dispose();
		do map.dispose();
		return;
	}

  	method void dispose() {
		do Memory.deAlloc(this);
		return;
  	}
}