function Map.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push constant 18
pop this 2
push pointer 0
call Map.createWalls 1
pop temp 0
push pointer 0
return
function Map.init 0
push argument 0
pop pointer 0
push pointer 0
call Map.draw 1
pop temp 0
push constant 0
return
function Map.getPos 1
push argument 0
pop pointer 0
push constant 4
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 256
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 155
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push constant 510
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
function Map.createWalls 0
push argument 0
pop pointer 0
push this 2
call Array.new 1
pop this 1
push constant 0
push this 1
add
push constant 0
push constant 12
push constant 6
push constant 12
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push constant 6
push constant 12
push constant 6
push constant 9
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 1
add
push constant 6
push constant 9
push constant 0
push constant 9
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 1
add
push constant 0
push constant 9
push constant 0
push constant 0
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 1
add
push constant 0
push constant 0
push constant 54
push constant 0
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 1
add
push constant 54
push constant 0
push constant 54
push constant 9
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 1
add
push constant 54
push constant 9
push constant 48
push constant 9
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push this 1
add
push constant 48
push constant 9
push constant 48
push constant 12
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push this 1
add
push constant 48
push constant 12
push constant 54
push constant 12
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push this 1
add
push constant 0
push constant 15
push constant 6
push constant 15
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push this 1
add
push constant 6
push constant 15
push constant 6
push constant 18
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push this 1
add
push constant 6
push constant 18
push constant 0
push constant 18
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push this 1
add
push constant 0
push constant 18
push constant 0
push constant 24
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push this 1
add
push constant 0
push constant 24
push constant 54
push constant 24
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push this 1
add
push constant 54
push constant 24
push constant 54
push constant 18
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push this 1
add
push constant 54
push constant 18
push constant 48
push constant 18
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 16
push this 1
add
push constant 48
push constant 18
push constant 48
push constant 15
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 17
push this 1
add
push constant 48
push constant 15
push constant 54
push constant 15
call Wall.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Map.draw 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push this 0
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 1
push this 2
lt
not
if-goto WHILE_END0
push local 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push local 0
call Wall.drawBorder 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 1
push this 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP1
push local 1
push this 2
lt
not
if-goto WHILE_END1
push local 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push local 0
call Wall.drawInside 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 1
label WHILE_EXP2
push local 1
push this 2
lt
not
if-goto WHILE_END2
push local 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push local 0
push this 0
call Wall.drawDetails 2
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 1
push this 0
call Screen.setColor 1
pop temp 0
label WHILE_EXP3
push local 1
push this 2
lt
not
if-goto WHILE_END3
push local 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push local 0
call Wall.fixDetails1 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP3
label WHILE_END3
push constant 0
pop local 1
push this 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP4
push local 1
push this 2
lt
not
if-goto WHILE_END4
push local 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push local 0
call Wall.fixDetails2 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP4
label WHILE_END4
push constant 0
return
function Map.checkOverlapping 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 2
lt
not
if-goto WHILE_END0
push local 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push local 0
push argument 1
push argument 2
push argument 3
call Wall.checkOverlapping 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 2
lt
not
if-goto WHILE_END0
push local 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push local 0
call Wall.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 1
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
