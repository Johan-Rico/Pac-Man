function PacMan.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push constant 254
pop this 3
push constant 234
pop this 4
push constant 7
pop this 12
push constant 9
pop this 13
push constant 503
pop this 14
push constant 2
pop this 5
push constant 2
pop this 6
push constant 3
pop this 11
push pointer 0
return
function PacMan.init 0
push argument 0
pop pointer 0
push this 0
call Screen.setColor 1
pop temp 0
push this 3
push this 4
push this 12
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function PacMan.changeColor 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push this 9
push this 10
sub
pop this 9
push pointer 0
call PacMan.draw 1
pop temp 0
push constant 0
return
function PacMan.next 0
push argument 0
pop pointer 0
push pointer 0
push this 6
call PacMan.NextMoveIsPossible 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
pop this 5
goto IF_END0
label IF_FALSE0
push pointer 0
push this 5
call PacMan.NextMoveIsPossible 2
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
label IF_END0
push this 2
push this 3
push constant 1
sub
push this 4
push this 12
call Score.checkCollision 4
pop temp 0
push this 0
not
call Screen.setColor 1
pop temp 0
push this 3
push this 12
sub
push this 4
push this 12
sub
push this 3
push this 12
add
push this 4
push this 12
add
call Screen.drawRectangle 4
pop temp 0
push this 7
pop this 3
push this 8
pop this 4
push this 3
push this 13
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 14
push constant 1
sub
pop this 3
label IF_FALSE2
push this 3
push this 14
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 13
push constant 1
add
pop this 3
label IF_FALSE3
push pointer 0
call PacMan.draw 1
pop temp 0
push constant 0
return
function PacMan.draw 4
push argument 0
pop pointer 0
push this 0
call Screen.setColor 1
pop temp 0
push this 3
push this 4
push this 12
call Screen.drawCircle 3
pop temp 0
push this 9
push constant 3
call Math.divide 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
push this 9
push constant 3
call Math.divide 2
call Math.multiply 2
push constant 5
sub
pop local 2
push constant 3
push this 9
push constant 3
call Math.divide 2
call Math.multiply 2
push constant 1
sub
pop local 1
push local 1
neg
pop local 0
push this 0
not
call Screen.setColor 1
pop temp 0
push this 5
push constant 2
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
neg
push this 5
call Math.multiply 2
push constant 7
add
pop local 3
label WHILE_EXP0
push local 0
push local 1
gt
not
not
if-goto WHILE_END0
push this 3
push local 0
add
push this 4
push local 2
push local 0
call Math.abs 1
call Math.multiply 2
push local 3
call Math.multiply 2
sub
push local 3
sub
push this 3
push local 0
add
push this 4
push local 3
push this 12
call Math.multiply 2
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END1
label IF_FALSE1
push constant 2
neg
push this 5
call Math.multiply 2
push constant 3
add
pop local 3
label WHILE_EXP1
push local 0
push local 1
gt
not
not
if-goto WHILE_END1
push this 3
push local 2
push local 0
call Math.abs 1
call Math.multiply 2
push local 3
call Math.multiply 2
sub
push local 3
sub
push this 4
push local 0
add
push this 3
push local 3
push this 12
call Math.multiply 2
add
push this 4
push local 0
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
label IF_END1
push this 0
call Screen.setColor 1
pop temp 0
label IF_FALSE0
push this 9
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop this 10
goto IF_END2
label IF_FALSE2
push this 9
push constant 8
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
neg
pop this 10
label IF_FALSE3
label IF_END2
push this 9
push this 10
add
pop this 9
push constant 0
return
function PacMan.NextMoveIsPossible 1
push argument 0
pop pointer 0
push this 11
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push this 3
pop this 7
push this 4
pop this 8
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push local 0
add
pop this 7
goto IF_END0
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push local 0
sub
pop this 7
goto IF_END1
label IF_FALSE1
push argument 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 4
push local 0
add
pop this 8
goto IF_END2
label IF_FALSE2
push argument 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 4
push local 0
sub
pop this 8
label IF_FALSE3
label IF_END2
label IF_END1
label IF_END0
push this 1
push this 7
push this 8
push this 12
call Map.checkOverlapping 4
push this 1
push this 7
push this 8
push this 12
call Map.checkDoorOverlaping 4
or
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
return
label IF_FALSE4
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function PacMan.deathAnimationFunction 0
push argument 0
pop pointer 0
push argument 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
call Math.abs 1
return
label IF_FALSE0
push argument 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 2
call Math.abs 1
push constant 1
add
push constant 2
call Math.divide 2
return
label IF_FALSE1
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 2
call Math.abs 1
push constant 1
add
push constant 3
call Math.divide 2
return
label IF_FALSE2
push argument 1
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 2
call Math.abs 1
push constant 4
call Math.divide 2
return
label IF_FALSE3
push argument 1
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 2
call Math.abs 1
neg
push constant 4
call Math.divide 2
return
label IF_FALSE4
push argument 1
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 2
call Math.abs 1
neg
push constant 2
call Math.divide 2
return
label IF_FALSE5
push argument 1
push constant 6
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push argument 2
call Math.abs 1
neg
push constant 3
call Math.divide 2
return
label IF_FALSE6
push argument 1
push constant 7
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push argument 2
call Math.abs 1
neg
return
label IF_FALSE7
push argument 1
push constant 8
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 2
neg
push argument 2
call Math.abs 1
call Math.multiply 2
push argument 2
call Math.abs 1
push constant 5
lt
call Math.multiply 2
return
label IF_FALSE8
push constant 6
push argument 2
push constant 0
eq
not
call Math.multiply 2
return
function PacMan.deathAnimation 3
push argument 0
pop pointer 0
push constant 0
pop local 1
push this 0
call Screen.setColor 1
pop temp 0
push this 3
push this 4
push this 12
call Screen.drawCircle 3
pop temp 0
push this 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 1
push constant 10
lt
not
if-goto WHILE_END0
push constant 7
neg
pop local 0
label WHILE_EXP1
push local 0
push constant 7
gt
not
not
if-goto WHILE_END1
push this 3
push local 0
add
push this 4
push this 12
sub
push this 3
push local 0
add
push this 4
push constant 1
add
push pointer 0
push local 1
push local 0
call PacMan.deathAnimationFunction 3
sub
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
push constant 125
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push this 0
not
call Screen.setColor 1
pop temp 0
push this 3
push this 12
sub
push this 4
push this 12
sub
push this 3
push this 12
add
push this 4
push this 12
add
call Screen.drawRectangle 4
pop temp 0
push this 0
call Screen.setColor 1
pop temp 0
push this 3
push constant 4
sub
push this 4
push this 3
push constant 7
sub
push this 4
call Screen.drawLine 4
pop temp 0
push this 3
push constant 4
add
push this 4
push this 3
push constant 7
add
push this 4
call Screen.drawLine 4
pop temp 0
push this 3
push constant 3
sub
push this 4
push constant 3
sub
push this 3
push constant 6
sub
push this 4
push constant 6
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 3
add
push this 4
push constant 3
sub
push this 3
push constant 6
add
push this 4
push constant 6
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 3
sub
push this 4
push constant 3
add
push this 3
push constant 6
sub
push this 4
push constant 6
add
call Screen.drawLine 4
pop temp 0
push this 3
push constant 3
add
push this 4
push constant 3
add
push this 3
push constant 6
add
push this 4
push constant 6
add
call Screen.drawLine 4
pop temp 0
push this 3
push constant 1
sub
push this 4
push constant 5
sub
push this 3
push constant 3
sub
push this 4
push constant 7
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 1
add
push this 4
push constant 5
sub
push this 3
push constant 3
add
push this 4
push constant 7
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 1
sub
push this 4
push constant 5
add
push this 3
push constant 3
sub
push this 4
push constant 7
add
call Screen.drawLine 4
pop temp 0
push this 3
push constant 1
add
push this 4
push constant 5
add
push this 3
push constant 3
add
push this 4
push constant 7
add
call Screen.drawLine 4
pop temp 0
push constant 125
call Sys.wait 1
pop temp 0
push this 0
not
call Screen.setColor 1
pop temp 0
push this 3
push this 12
sub
push this 4
push this 12
sub
push this 3
push this 12
add
push this 4
push this 12
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function PacMan.handleKey 0
push argument 0
pop pointer 0
push argument 1
push constant 130
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
pop this 6
label IF_FALSE0
push argument 1
push constant 133
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 3
pop this 6
label IF_FALSE1
push argument 1
push constant 132
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop this 6
label IF_FALSE2
push argument 1
push constant 131
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 4
pop this 6
label IF_FALSE3
push constant 0
return
function PacMan.getX 0
push argument 0
pop pointer 0
push this 3
return
function PacMan.getY 0
push argument 0
pop pointer 0
push this 4
return
function PacMan.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
