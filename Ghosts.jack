class Ghosts {
    field Map map;
    field PacMan pacman;
    field Array ghosts;
    field int nGhosts;
    field boolean color;
    field boolean ghostsVulnerable;
    field int vulnerableTimer;
	field Score score;
    
    constructor Ghosts new(boolean c, Map m, PacMan p) {
        let map = m;
        let pacman = p;
        let color = c;
        let nGhosts = 5;
        let ghostsVulnerable = false;
        let vulnerableTimer = 0;
        do createGhosts(color);
        return this;
    }
    
    method void init() {
        var Ghost g;
        var int i;
        let i = 0;
        while (i < nGhosts) {
            let g = ghosts[i];
            do g.setVulnerable(false);
            do g.changeColor(color);
            do g.init();
            let i = i + 1;
        }
        do draw();
        return;
    }

	method void setScore(Score s) {
        let score = s;
        return;
    }
    
    method void createGhosts(boolean color) {
        let ghosts = Array.new(nGhosts);
        
        let ghosts[0] = Ghost.new(color, map, pacman, 256, 108, false, 0);
        let ghosts[1] = Ghost.new(color, map, pacman, 241, 135, true, 150); 
        let ghosts[2] = Ghost.new(color, map, pacman, 268, 135, true, 300);  
        let ghosts[4] = Ghost.new(color, map, pacman, 241, 153, false, 450); 
        let ghosts[3] = Ghost.new(color, map, pacman, 268, 153, false, 600); 
        
        return;
    }
    
    method void next() {
        var Ghost g;
        var int i, t, f;
        let t = 75;
        let f = t / 9;
        
        if (ghostsVulnerable) {
            let vulnerableTimer = vulnerableTimer - 1;
            if (vulnerableTimer = t) { do setBlinking(true); }
            if (vulnerableTimer = (t - f)) { do setBlinking(false); }
            if (vulnerableTimer = (t - (2*f))) { do setBlinking(true); }
            if (vulnerableTimer = (t - (3*f))) { do setBlinking(false); }
            if (vulnerableTimer = (t - (4*f))) { do setBlinking(true); }
            if (vulnerableTimer = (t - (5*f))) { do setBlinking(false); }
            if (vulnerableTimer = (t - (6*f))) { do setBlinking(true); }
            if (vulnerableTimer = (t - (7*f))) { do setBlinking(false); }
            if (vulnerableTimer = (t - (8*f))) { do setBlinking(true); }
            if (vulnerableTimer < 0) {
                let ghostsVulnerable = false;
                let i = 0;
                while (i < nGhosts) {
                    let g = ghosts[i];
                    do g.setBlinking(false);
                    do g.setVulnerable(false);
                    let i = i + 1;
                }
            }
        } 

        let i = 0;
        while (i < nGhosts) {
            let g = ghosts[i];
            do g.next();
            let i = i + 1;
        }
        return;
    }

    method void setBlinking(boolean b) {
        var Ghost g;
        var int i;
        while (i < nGhosts) {
            let g = ghosts[i];
            do g.setBlinking(b);
            let i = i + 1;
        }
        return;
    }
    
    method void makeVulnerable() {
        var Ghost g;
        var int i;
        let ghostsVulnerable = true;
        let vulnerableTimer = 300;
        let i = 0;
        while (i < nGhosts) {
            let g = ghosts[i];
            do g.setVulnerable(true);
            let i = i + 1;
        }
        return;
    }
    
    method void changeColor(boolean c) {
        let color = c;
        return;
    }
    
    method void draw() {
        var Ghost g;
        var int i;
        let i = 0;
        while (i < nGhosts) {
            let g = ghosts[i];
            do g.draw();
            let i = i + 1;
        }
        return;
    }
    
    method void clearGhosts() {
        var Ghost g;
        var int i;
        let i = 0;
        while (i < nGhosts) {
            let g = ghosts[i];
            do g.changeColor(color);
            do g.clearGhost();
            let i = i + 1;
        }
        return;
    }
    
    method boolean checkPacmanCollision() {
        var Ghost g;
        var int i;
        let i = 0;
        while (i < nGhosts) {
            let g = ghosts[i];
            if (g.checkPacmanCollision()) {
                if (g.isVulnerable()) {
                    do g.changeColor(color);
                    do g.clearGhost();
                    do g.reset();
                    do score.addPoints(200);
                    do g.setVulnerable(false);
                } else {
                    return true;
                }
            }
            let i = i + 1;
        }
        return false;
    }
    
    method void dispose() {
        var Ghost g;
        var int i;
        let i = 0;
        while (i < nGhosts) {
            let g = ghosts[i];
            do g.dispose();
            let i = i + 1;
        }
        do Memory.deAlloc(this);
        return;
    }
}